На основании проведенного эксперимента с операциями вставки, удаления и поиска по индексу среди Java коллекций можно сделать следующие выводы:
1. ArrayList vs LinkedList
При добавлении небольшого количества элементов лучше себя проявил ArrayList, с увеличением количества элементов скорость 
выполнения вставки становится выше у LinkedList. Это связано с частым вызовом функции System.arraycopy() для копирования элементов из одного массива в другой
коллекцией ArrayList.
Операция поиска имеет такую же зависимость по скорости выполнения операций.
А операция удаления при небольшом количестве элементов быстрее у LinkedList, с ростом числа элементов скорость удаления становится быстрее у ArrayList. 
(Речь идет об удалении только одного элемента, при большом количестве операций удаления ситуация будет противоположная).
2. HashSet, LinkedHashSet, TreeSet
Самым производительным списком в результате эксперимента получился LinkedHashSet. 
Самое долгое добавление элементов у TreeSet. Это связано с расположением элементов в дереве, но зато более у TreeSet быстрый поиск и удаление
по сравнению с HashSet.
Операции вставки и удаления у списков с небольшим количеством элементов производятся за практически одинаковое время.
3. HashMap, LinkedHashMap, TreeMap
Самая худшая производительность по всем параметрам у TreeMap.
Добавление быстрее у HashMap, но поиск и удаление элемента быстрее у LinkedHashMap.
При небольшом количестве элементов операции во всех мапах проводятся за практически одинаковое время.

